@page
@model NotatkiWEB.Pages.SubjectsList.IndexModel

@{
    ViewData["Title"] = "Lista przedmiotów";
}


<br />

<div class="row">
    <div class="col-lg-6">
        <h2>Lista przedmiotów</h2>
    </div>
    <div class="col-lg-6 text-right">
        <a asp-page="Create" class="btn btn-primary btn-sm"><i class="fas fa-plus"></i>&nbsp;Dodaj nowy przedmiot</a>
    </div>
</div>

@if (Model.Message != null)
{
    <div class="alert alert-info alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Przedmiot</strong> @Model.Message
    </div>
}

<br />

<div>
    @if (Model.SubjectList.Count == 0)
    {
        <p class="text-warning">Brak dostępnych przedmiotów. Kliknij w przycisk 'Dodaj nowy przedmiot', aby dodać nowy przedmiot.</p>
    }
    else
    {
        <form asp-page="./Index" method="get">
            <div class="form-actions">
                <p>
                    Szukaj przedmiotu:
                    <input type="text" class="form-control" name="SearchString" value="@Model.CurrentFilter" placeholder="Szukaj..."/>
                    <input type="submit" value="Szukaj" class="btn btn-info"/>|
                    <a class="btn btn-default" asp-page="./Index">Wróć do pełnej listy</a>
                </p>
            </div>
        </form>
        <table class="table table-responsive">
            <thead>
                <tr class="info">
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.SubjectSort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.SubjectList[0].SubjectName)
                        </a>
                    </th>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.SemesterSort" asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.SubjectList[0].SemesterList)
                        </a>
                    </th>
                    <th>
                        Edycja
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.SubjectList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubjectName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SemesterList.SemesterName)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.IDSubject" class="btn btn-info btn-xs">Edytuj</a>
                            <a asp-page="./Delete" asp-route-id="@item.IDSubject" class="btn btn-danger btn-xs">Usuń</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @{
        var prevDisabled = !Model.SubjectList.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.SubjectList.HasNextPage ? "disabled" : "";
    }

    <ul class="pagination">
        <li class="@prevDisabled"><a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.SubjectList.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter">&laquo;</a></li>
        @for (var i = 1; i <= Model.SubjectList.TotalPages; i++)
        {
            <li class="page-item @(i == Model.SubjectList.PageIndex ? "active" : "")">
                <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@i" asp-route-currentFilter="@Model.CurrentFilter" class="page-link">@i</a>
            </li>
        }
        <li class="@nextDisabled"><a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.SubjectList.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter">&raquo;</a></li>
    </ul>
</div>